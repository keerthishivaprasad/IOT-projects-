#include <DHT.h>
#include <Adafruit_BMP085.h>
#include <ESP8266WiFi.h>  // Use <WiFi.h> for ESP32

// WiFi credentials
const char* ssid = "YOUR_WIFI_SSID";
const char* password = "YOUR_WIFI_PASSWORD";

// ThingSpeak settings
const char* server = "api.thingspeak.com";
const String apiKey = "YOUR_THINGSPEAK_API_KEY";

// Sensor pins
#define DHTPIN D4      // DHT22 data pin
#define DHTTYPE DHT22  // DHT22 sensor type

DHT dht(DHTPIN, DHTTYPE);
Adafruit_BMP085 bmp;

void setup() {
  Serial.begin(115200);
  delay(100);

  // Initialize sensors
  dht.begin();
  if (!bmp.begin()) {
    Serial.println("BMP180 not found!");
    while (1);
  }

  // Connect to WiFi
  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi...");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWiFi Connected!");
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());
}

void loop() {
  // Read sensor data
  float temperature = dht.readTemperature();  // Celsius
  float humidity = dht.readHumidity();        // %
  float pressure = bmp.readPressure() / 100.0F; // hPa

  // Check if sensor readings failed
  if (isnan(temperature) || isnan(humidity)) {
    Serial.println("Failed to read DHT22!");
    return;
  }

  // Print data to Serial Monitor
  Serial.print("Temperature: ");
  Serial.print(temperature);
  Serial.println(" Â°C");
  Serial.print("Humidity: ");
  Serial.print(humidity);
  Serial.println(" %");
  Serial.print("Pressure: ");
  Serial.print(pressure);
  Serial.println(" hPa");

  // Send data to ThingSpeak
  if (WiFi.status() == WL_CONNECTED) {
    WiFiClient client;
    if (client.connect(server, 80)) {
      String postStr = apiKey;
      postStr += "&field1=" + String(temperature);
      postStr += "&field2=" + String(humidity);
      postStr += "&field3=" + String(pressure);
      postStr += "\r\n\r\n";

      client.print("POST /update HTTP/1.1\n");
      client.print("Host: api.thingspeak.com\n");
      client.print("Connection: close\n");
      client.print("X-THINGSPEAKAPIKEY: " + apiKey + "\n");
      client.print("Content-Type: application/x-www-form-urlencoded\n");
      client.print("Content-Length: ");
      client.print(postStr.length());
      client.print("\n\n");
      client.print(postStr);

      Serial.println("Data sent to ThingSpeak!");
    }
    client.stop();
  } else {
    Serial.println("WiFi Disconnected!");
  }

  delay(30000); // Update every 30 seconds
}
